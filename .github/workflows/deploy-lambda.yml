name: Deploy Lambda Function

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to AWS Lambda (Python 3.13)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.13
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: 3.13  # ‚úÖ AWS Lambda now supports Python 3.13

      # Step 3: Install dependencies in a Lambda-compatible way
      - name: Install dependencies
        run: |
          mkdir -p package

          echo "üîç Installing dependencies for AWS Lambda (Python 3.13)..."

          pip install \
              --platform manylinux2014_x86_64 \
              --target=package \
              --implementation cp \
              --python-version 3.13 \
              --only-binary=:all: \
              --upgrade -r requirements.txt

          pip install \
              --platform manylinux2014_x86_64 \
              --target=package \
              --implementation cp \
              --python-version 3.13 \
              --only-binary=:all: \
              --upgrade pydantic

          # Ensure chromedriver-autoinstaller is installed and up-to-date
          pip install --upgrade chromedriver-autoinstaller --target=package

      # Step 4: Install and verify ChromeDriver (without force=True)
      - name: Install ChromeDriver
        run: |
          echo "üîç Python Version:"
          python --version  # Ensure Python 3.13 is used

          echo "üîç Checking Python PATH:"
          python -c "import sys; print(sys.path)"  # Debugging Python path issues

          echo "üîç Installing ChromeDriver..."
          python -c "import sys; sys.path.append('./package'); import chromedriver_autoinstaller; chromedriver_autoinstaller.install(path='./package')"

          echo "üîç Listing package directory:"
          ls -l package  # Show contents of package folder

          # Ensure ChromeDriver exists
          if [ ! -f package/chromedriver ]; then
            echo "‚ùå ChromeDriver was not installed correctly!"
            exit 1
          else
            echo "‚úÖ ChromeDriver installed successfully!"
          fi

      # Step 5: Copy Python scripts & Create deployment ZIP
      - name: Prepare Deployment Package
        run: |
          cp *.py package/

          # Create deployment ZIP
          cd package && zip -r ../index.zip . && cd ..

      # Step 6: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 7: Deploy Lambda function (Python 3.13)
      - name: Deploy Lambda
        run: |
          aws lambda update-function-code \
            --function-name menu-tool-function \
            --zip-file fileb://index.zip
