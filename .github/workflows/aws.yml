name: Deploy to Amazon ECS

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: us-east-2                   # AWS region
  ECR_REPOSITORY: menu-tool               # ECR repository name
  ECS_SERVICE: host-menu-gen-service      # ECS service name
  ECS_CLUSTER: menu-tool                  # ECS cluster name
  ECS_TASK_DEFINITION: .aws/task-definition.json  # Task definition file path
  CONTAINER_NAME: flask-container         # Container name in task definition

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # There was a typo in github actions, should be AWS_ACCESS_KEY_ID 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push Docker Image to ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Replace Placeholders in Task Definition
      run: |
        sed -i "s/\${ECR_REGISTRY}/${{ steps.login-ecr.outputs.registry }}/g" ${{ env.ECS_TASK_DEFINITION }}
        sed -i "s/\${ECR_REPOSITORY}/${{ env.ECR_REPOSITORY }}/g" ${{ env.ECS_TASK_DEFINITION }}
        sed -i "s/\${IMAGE_TAG}/${{ github.sha }}/g" ${{ env.ECS_TASK_DEFINITION }}
        sed -i "s/\${AWS_ACCOUNT_ID}/${{ secrets.AWS_ACCOUNT_ID }}/g" ${{ env.ECS_TASK_DEFINITION }}

    - name: Deploy ECS Service
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
